"""Add ScheduleList model and relationship

Revision ID: 9b10f1b6f56f
Revises: 48e0161eee0f
Create Date: 2025-10-22 20:58:01.491206

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9b10f1b6f56f'
down_revision = '48e0161eee0f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Check if table exists before creating
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    
    if 'schedule_list' not in inspector.get_table_names():
        op.create_table('schedule_list',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
        )
    
    # Use batch mode for SQLite compatibility
    with op.batch_alter_table('schedule', schema=None) as batch_op:
        # Check if column exists before adding
        columns = [c['name'] for c in inspector.get_columns('schedule')]
        if 'schedule_list_id' not in columns:
            batch_op.add_column(sa.Column('schedule_list_id', sa.Integer(), nullable=True))
            batch_op.create_foreign_key('fk_schedule_list', 'schedule_list', ['schedule_list_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('schedule', schema=None) as batch_op:
        batch_op.drop_constraint('fk_schedule_list', type_='foreignkey')
        batch_op.drop_column('schedule_list_id')
    
    op.drop_table('schedule_list')
    # ### end Alembic commands ###
